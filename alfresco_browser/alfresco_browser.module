<?php
// $Id$

/**
 * @file
 * Alfresco browser.
 */

/**
 * Ext adapter.
 *  - native: adapter/ext/ext-base.js
 *  - jQuery: adapter/jquery/ext-jquery-adapter.js
 */
define('ALFRESCO_BROWSER_EXT_ADAPTER', 'adapter/ext/ext-base.js');

/**
 * Ext library.
 */
define('ALFRESCO_BROWSER_EXT_ALL', 'ext-all.js');

/**
 * The default Alfresco browser home path.
 */
define('ALFRESCO_BROWSER_HOME', '/app:company_home');

/**
 * Implementation of hook_help().
 */
function alfresco_browser_help($path, $arg) {

  switch ($path) {
    case 'admin/help#alfresco_browser':
      return '<p>'. t('Allows users to visualize, search, browse and retrieve nodes of the Alfresco repository.') .'</p>';
  }
}

/**
 * Implementation of hook_perm().
 */
function alfresco_browser_perm() {

  return array('access alfresco browser');
}

/**
 * Implementation of hook_menu().
 */
function alfresco_browser_menu() {

  // Settings

  $items['admin/settings/alfresco/browser'] = array(
    'title' => 'Browser',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('alfresco_browser_admin_settings'),
    'access arguments' => array('administer alfresco'),
    'weight' => 2,
    'type' => MENU_LOCAL_TASK,
    'parent' => 'admin/settings/alfresco',
    'file' => 'alfresco_browser.admin.inc',
  );

  // Pages

  $items['alfresco/repository'] = array(
    'title' => 'Repository browser',
    'description' => 'Visualize, search, browse and retrieve nodes of the Alfresco repository.',
    'page callback' => 'alfresco_browser_repository_page',
    'access callback' => 'alfresco_browser_access',
    'file' => 'alfresco_browser.pages.inc',
  );

  // Ext JS page

  $items['alfresco/browser'] = array(
    'title' => 'Alfresco browser',
    'page callback' => 'alfresco_browser_page',
    'access callback' => 'alfresco_browser_access',
    //'access arguments' => array('access alfresco browser'),
    'file' => 'alfresco_browser.pages.inc',
    'type' => MENU_CALLBACK,
  );

  // Callbacks

  $items['alfresco/browser/service/spaces'] = array(
    'page callback' => 'alfresco_browser_service_spaces',
    'access callback' => 'alfresco_browser_access',
    'file' => 'alfresco_browser.pages.inc',
    'type' => MENU_CALLBACK,
  );

  $items['alfresco/browser/service/items'] = array(
    'page callback' => 'alfresco_browser_service_items',
    'access callback' => 'alfresco_browser_access',
    'file' => 'alfresco_browser.pages.inc',
    'type' => MENU_CALLBACK,
  );

  $items['alfresco/browser/service/download'] = array(
    'page callback' => 'alfresco_browser_service_download',
    'access callback' => 'alfresco_browser_access',
    'file' => 'alfresco_browser.pages.inc',
    'type' => MENU_CALLBACK,
  );

  $items['alfresco/browser/service/upload'] = array(
    'page callback' => 'alfresco_browser_service_upload',
    'access callback' => 'alfresco_browser_access',
    'file' => 'alfresco_browser.pages.inc',
    'type' => MENU_CALLBACK,
  );

  $items['alfresco/browser/service/delete'] = array(
    'page callback' => 'alfresco_browser_service_delete',
    'access callback' => 'alfresco_browser_access',
    'file' => 'alfresco_browser.pages.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function alfresco_browser_access() {
  return alfresco_repository_access() && user_access('access alfresco browser');
}

/**
 * Implementation of hook_theme
 */
function alfresco_browser_theme() {

  return array(
    'alfresco_browser' => array(
      'arguments' => array('element' => NULL),
    ),
    'alfresco_browser_page' => array(
      'arguments' => array(),
      'template' => 'alfresco-browser-page',
    ),
  );
}

/**
 * Process variables for alfresco-browser-page.tpl.php.
 *
 * @see browser-page.tpl.php
 * @see template_preprocess_page()
 */
function template_preprocess_alfresco_browser_page(&$variables) {

  // Add favicon
  if (theme_get_setting('toggle_favicon')) {
    drupal_set_html_head('<link rel="shortcut icon" href="'. check_url(theme_get_setting('favicon')) .'" type="image/x-icon" />');
  }

  // CSS
  $css = drupal_add_css();
  $css['all']['theme'] = array();
  $css['print'] = array();

  foreach ($css['all']['module'] as $file => $style) {
    if (strpos($file, '/alfresco_browser/') === FALSE && strpos($file, '/ext/') === FALSE) {
      unset($css['all']['module'][$file]);
    }
  }

  $variables['head_title'] = drupal_get_title();
  $variables['head']       = drupal_get_html_head();
  $variables['styles']     = drupal_get_css($css);
  $variables['scripts']    = drupal_get_js();
  $variables['closure']    = theme('closure');

  // Header page
  $variables['header'] = l(t('Alfresco Browser for Drupal'), 'http://drupal.org/project/alfresco', array(
    'attributes' => array(
      'title' => t('Visit the official project page'),
      'target' => '_blank'
  )));

  $module_path = drupal_get_path('module', 'alfresco_browser');

  // Loading message
  $info = drupal_parse_info_file($module_path .'/alfresco_browser.info');
  $variables['loading_msg'] = isset($info['version']) ? $info['name'] .' '. $info['version'] : $info['name'];

  // Loading image
  $variables['loading_img'] = theme('image', $module_path .'/images/loading.gif');
}

/**
 * Implementation of hook_elements().
 */
function alfresco_browser_elements() {
  $type['alfresco_browser'] = array(
    '#input' => TRUE,
    '#default_value' => '',
    '#process' => array('alfresco_browser_process'),
    //'#element_validate' => array('alfresco_browser_element_validate'),
  );
  return $type;
}

/**
 * Our #process callback to expand the control.
 */
function alfresco_browser_process($element, $edit, $form_state, $complete_form) {

  if (isset($complete_form['#post']['alfresco_browser_name'])){
    $cm_name = $complete_form['#post']['alfresco_browser_name'];
  }
  elseif (isset($complete_form['#node']->cm_name)) {
    $cm_name = $complete_form['#node']->cm_name;
  }
  else {
    $cm_name = '';
  }

  $element['alfresco_browser_reference'] = array(
    '#type' => 'hidden',
    '#name' => $element['#name'],
    '#default_value' => $element['#value'],
    '#attributes' => array('class' => 'alfresco-browser-reference'),
  );

  $element['alfresco_browser_name'] = array(
    '#type' => 'textfield',
    '#default_value' => $cm_name,
    '#attributes' => array('class' => 'alfresco-browser-name', 'readonly' => TRUE),
  );

  $element['alfresco_browser_button'] = array(
    '#type' => 'markup',
    '#value' => '<input type="button" class="alfresco-browser-button" value="'. t('Browse...') .'" />',
  );

  return $element;
}

/**
 *
 */
function theme_alfresco_browser($element) {
  alfresco_browser_add_js();
  return theme('form_element', $element, '<div class="container-inline alfresco-browser-container">'. $element['#children'] .'</div>');
}

function alfresco_browser_add_js($features = 'width=800,height=500,resizable') {
  static $added = FALSE;

  if (!$added) {
    drupal_add_js(array(
      'alfrescoBrowserUrl' => url('alfresco/browser', array('absolute' => TRUE)),
      'alfrescoBrowserName' => 'AlfrescoBrowserPopup',
      'alfrescoBrowserFeatures' => $features,
    ), 'setting');

    drupal_add_js(drupal_get_path('module', 'alfresco_browser') .'/alfresco_browser.js');

    $added = TRUE;
  }
}
